package org.fgb.io.filecache.util;

import java.io.File;
import java.util.UUID;

/**
 * Class <code>FileNameGenerator</code> will generate a (hopefully) unique file name.
 * 
 * @author burkley
 */
public class FileNameGenerator {
	/**
	 * The name of this class.
	 */
	private final static String _className = FileNameGenerator.class.getName();
	
	/** Prevent instances. */
	private FileNameGenerator() {
	}

	/**
	 * Get a (hopefully) unique file name.
	 * <p>
	 * This method takes the <code>directoryName</code> argument, appends a (hopefully unique) file name, then appends the <code>extension</code> argument.
	 * <p>
	 * The (hopefuly unique) file name is actually a type 4 UUID as generated by the class java.util.UUID.
	 * 
	 * @param directoryName The name of the directory for the file (i.e. the directory path).
	 * @param extension The file extension.
	 * @return A (hopefully) unique file name.
	 */
	public static String getHopefullyUniqueFileName(final String directoryName, final String extension) {
		synchronized (FileNameGenerator.class) {
			StringBuilder fqfn = new StringBuilder(directoryName).append(File.separator).append(UUID.randomUUID().toString());
			if (!extension.startsWith(".")) {
				fqfn.append(".");
			}
			fqfn.append(extension);
			return fqfn.toString();
		}
	}
	
}
