package org.fgb.io.filecache.util;

import java.util.Date;
import java.util.Random;
import java.util.logging.Logger;

/**
 * Class <code>RandomLineHelper</code> will generate a line of text containing a
 * series of random numbers.
 * <p>
 * The number of fields per line, i.e. the number of random numbers per line, is
 * specified when constructing an instance of this class.
 * <p>
 * The maximum value of a number (that is in a line) is 345.0. This is an
 * arbitrary value.
 * <P>
 * A typical line appears as:
 * 
 * <pre>
 * 256.61987	54.05118	75.37922	89.87322	60.63649	118.63278	74.480446	287.4949	275.73047	157.23566	252.51195	216.38153	52.19731	37.58171	2.409314	252.97537	314.55902	189.45442	277.22253	37.991997	14.473404	191.34471	0.3187564	319.5977
 * </pre>
 * 
 * @author burkley
 */
public class RandomLineHelper {

	/**
	 * The name of this class.
	 */
	private static final String _className = RandomLineHelper.class.getName();
	/**
	 * JDK logger.
	 */
	private static final Logger _logger = Logger.getLogger(_className);
	/**
	 * The number of fields per line in the file that will be generated.
	 */
	private final short numberOfFieldsPerLine;
	/**
	 * A random number generator.
	 */
	private final Random randomNumberGenerator;
	/**
	 * The maximum value of a number that is in a line (generated by the method
	 * {@linkplain #getLine()}). This is an arbitrary value.
	 */
	private final float maximumFloatValue = 345.0f;

	/**
	 * Construct an instance of <code>RandomLineHelper</code>. The number of
	 * fields per line is specified via the argument
	 * {@linkplain #numberOfFieldsPerLine}.
	 * 
	 * @param numberOfFieldsPerLine
	 *            The number of fields per line.
	 */
	public RandomLineHelper(final short numberOfFieldsPerLine) {
		this.numberOfFieldsPerLine = numberOfFieldsPerLine;
		long time = new Date().getTime();
		this.randomNumberGenerator = new Random(time);
	}

	/**
	 * Generate a line of text containing a series of random numbers. A typical
	 * line appears as:
	 * 
	 * <pre>
	 * 256.61987	54.05118	75.37922	89.87322	60.63649	118.63278	74.480446	287.4949	275.73047	157.23566	252.51195	216.38153	52.19731	37.58171	2.409314	252.97537	314.55902	189.45442	277.22253	37.991997	14.473404	191.34471	0.3187564	319.5977
	 * </pre>
	 * 
	 * @return A line of text containing a series of random numbers.
	 */
	public String getLine() {
		float number;
		int index;
		StringBuilder line = new StringBuilder();

		// line.append(lineNumber).append(":\t");
		for (short field = 0; field < this.numberOfFieldsPerLine; field++) {
			number = randomNumberGenerator.nextFloat() * maximumFloatValue;
			line.append(number).append("\t");
		}
		// Remove trailing tab
		index = line.lastIndexOf("\t");
		line.delete(index, line.length());
		// Append newline
		line.append("\n");
		return line.toString();
	}
}
